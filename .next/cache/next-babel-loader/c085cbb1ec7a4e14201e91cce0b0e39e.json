{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TTL\\\\github\\\\bulletproof-next-app\\\\pages\\\\post\\\\[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Theme from \"../../components/Theme\";\nimport ms from \"ms\";\nimport { promises as fsPromises } from \"fs\";\nimport Markdown from \"markdown-to-jsx\";\nimport Youtube from \"../../components/Youtube\";\nexport default function Post({\n  post\n}) {\n  fsPromises.readdir(\"data\");\n  return __jsx(Theme, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"Published \", ms(Date.now() - post.createdAt, {\n    long: true\n  }), \" ago\"), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, post.title), __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, __jsx(Markdown, {\n    options: {\n      overrides: {\n        Youtube: {\n          component: Youtube\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, post.content))));\n}\nexport async function getStaticPaths() {\n  const markdownFiles = await fsPromises.readdir(\"data\");\n  const paths = markdownFiles.map(filename => {\n    const slug = filename.replace(/.md$/, \"\");\n    return {\n      params: {\n        slug\n      }\n    };\n  });\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const [year, month, day, ...rest] = params.slug.split(\"-\");\n  const createdAt = new Date(`${year} ${month} ${day}`).getTime();\n  const title = rest.join(\" \");\n  const content = await fsPromises.readFile(`data/${params.slug}.md`, \"utf8\");\n  return {\n    props: {\n      post: {\n        slug: params.slug,\n        title,\n        content,\n        createdAt\n      }\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/TTL/github/bulletproof-next-app/pages/post/[slug].js"],"names":["Theme","ms","promises","fsPromises","Markdown","Youtube","Post","post","readdir","Date","now","createdAt","long","title","overrides","component","content","getStaticPaths","markdownFiles","paths","map","filename","slug","replace","params","fallback","getStaticProps","year","month","day","rest","split","getTime","join","readFile","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,wBAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SAASC,QAAQ,IAAIC,UAArB,QAAuC,IAAvC;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAwB;AACrCJ,EAAAA,UAAU,CAACK,OAAX,CAAmB,MAAnB;AACA,SACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaP,EAAE,CAACQ,IAAI,CAACC,GAAL,KAAaH,IAAI,CAACI,SAAnB,EAA8B;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAA9B,CADf,SADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,IAAI,CAACM,KAAV,CAJF,EAKE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,OAAO,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAET,QAAAA,OAAO,EAAE;AAAEU,UAAAA,SAAS,EAAEV;AAAb;AAAX;AAAb,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGE,IAAI,CAACS,OAHR,CADF,CALF,CADF,CADF;AAiBD;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,aAAa,GAAG,MAAMf,UAAU,CAACK,OAAX,CAAmB,MAAnB,CAA5B;AAEA,QAAMW,KAAK,GAAGD,aAAa,CAACE,GAAd,CAAmBC,QAAD,IAAc;AAC5C,UAAMC,IAAI,GAAGD,QAAQ,CAACE,OAAT,CAAiB,MAAjB,EAAyB,EAAzB,CAAb;AAEA,WAAO;AACLC,MAAAA,MAAM,EAAE;AAAEF,QAAAA;AAAF;AADH,KAAP;AAGD,GANa,CAAd;AAOA,SAAO;AACLH,IAAAA,KADK;AAELM,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEF,EAAAA;AAAF,CAA9B,EAA0C;AAC/C,QAAM,CAACG,IAAD,EAAOC,KAAP,EAAcC,GAAd,EAAmB,GAAGC,IAAtB,IAA8BN,MAAM,CAACF,IAAP,CAAYS,KAAZ,CAAkB,GAAlB,CAApC;AACA,QAAMpB,SAAS,GAAG,IAAIF,IAAJ,CAAU,GAAEkB,IAAK,IAAGC,KAAM,IAAGC,GAAI,EAAjC,EAAoCG,OAApC,EAAlB;AACA,QAAMnB,KAAK,GAAGiB,IAAI,CAACG,IAAL,CAAU,GAAV,CAAd;AAEA,QAAMjB,OAAO,GAAG,MAAMb,UAAU,CAAC+B,QAAX,CAAqB,QAAOV,MAAM,CAACF,IAAK,KAAxC,EAA8C,MAA9C,CAAtB;AAEA,SAAO;AACLa,IAAAA,KAAK,EAAE;AACL5B,MAAAA,IAAI,EAAE;AACJe,QAAAA,IAAI,EAAEE,MAAM,CAACF,IADT;AAEJT,QAAAA,KAFI;AAGJG,QAAAA,OAHI;AAIJL,QAAAA;AAJI;AADD;AADF,GAAP;AAUD","sourcesContent":["import Theme from \"../../components/Theme\";\r\nimport ms from \"ms\";\r\nimport { promises as fsPromises } from \"fs\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport Youtube from \"../../components/Youtube\";\r\n\r\nexport default function Post({ post }) {\r\n  fsPromises.readdir(\"data\");\r\n  return (\r\n    <Theme>\r\n      <div className=\"post\">\r\n        <div className=\"time\">\r\n          Published {ms(Date.now() - post.createdAt, { long: true })} ago\r\n        </div>\r\n        <h1>{post.title}</h1>\r\n        <div className=\"content\">\r\n          <Markdown\r\n            options={{ overrides: { Youtube: { component: Youtube } } }}\r\n          >\r\n            {post.content}\r\n          </Markdown>\r\n        </div>\r\n      </div>\r\n    </Theme>\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const markdownFiles = await fsPromises.readdir(\"data\");\r\n\r\n  const paths = markdownFiles.map((filename) => {\r\n    const slug = filename.replace(/.md$/, \"\");\r\n\r\n    return {\r\n      params: { slug },\r\n    };\r\n  });\r\n  return {\r\n    paths,\r\n    fallback: false,\r\n  };\r\n}\r\n\r\nexport async function getStaticProps({ params }) {\r\n  const [year, month, day, ...rest] = params.slug.split(\"-\");\r\n  const createdAt = new Date(`${year} ${month} ${day}`).getTime();\r\n  const title = rest.join(\" \");\r\n\r\n  const content = await fsPromises.readFile(`data/${params.slug}.md`, \"utf8\");\r\n\r\n  return {\r\n    props: {\r\n      post: {\r\n        slug: params.slug,\r\n        title,\r\n        content,\r\n        createdAt,\r\n      },\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}