{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TTL\\\\github\\\\bulletproof-next-app\\\\pages\\\\post\\\\[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Theme from \"../../components/Theme\";\nimport ms from \"ms\";\nimport Markdown from \"markdown-to-jsx\";\nimport Youtube from \"../../components/Youtube\";\nexport var __N_SSG = true;\nexport default function Post(_ref) {\n  var post = _ref.post;\n  return __jsx(Theme, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, \"Published \", ms(Date.now() - post.createdAt, {\n    long: true\n  }), \" ago\"), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, post.title), __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, __jsx(Markdown, {\n    options: {\n      overrides: {\n        Youtube: {\n          component: Youtube\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, post.content))));\n}\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/TTL/github/bulletproof-next-app/pages/post/[slug].js"],"names":["Theme","ms","Markdown","Youtube","Post","post","Date","now","createdAt","long","title","overrides","component","content"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,wBAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AAEA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,eAAe,SAASC,IAAT,OAAwB;AAAA,MAARC,IAAQ,QAARA,IAAQ;AACrC,SACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaJ,EAAE,CAACK,IAAI,CAACC,GAAL,KAAaF,IAAI,CAACG,SAAnB,EAA8B;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAA9B,CADf,SADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,IAAI,CAACK,KAAV,CAJF,EAKE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,OAAO,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAER,QAAAA,OAAO,EAAE;AAAES,UAAAA,SAAS,EAAET;AAAb;AAAX;AAAb,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGE,IAAI,CAACQ,OAHR,CADF,CALF,CADF,CADF;AAiBD;KAlBuBT,I","sourcesContent":["import Theme from \"../../components/Theme\";\r\nimport ms from \"ms\";\r\nimport { promises as fsPromises } from \"fs\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport Youtube from \"../../components/Youtube\";\r\n\r\nexport default function Post({ post }) {\r\n  return (\r\n    <Theme>\r\n      <div className=\"post\">\r\n        <div className=\"time\">\r\n          Published {ms(Date.now() - post.createdAt, { long: true })} ago\r\n        </div>\r\n        <h1>{post.title}</h1>\r\n        <div className=\"content\">\r\n          <Markdown\r\n            options={{ overrides: { Youtube: { component: Youtube } } }}\r\n          >\r\n            {post.content}\r\n          </Markdown>\r\n        </div>\r\n      </div>\r\n    </Theme>\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const markdownFiles = await fsPromises.readdir(\"data\");\r\n\r\n  const paths = markdownFiles.map((filename) => {\r\n    const slug = filename.replace(/.md$/, \"\");\r\n\r\n    return {\r\n      params: { slug },\r\n    };\r\n  });\r\n  return {\r\n    paths,\r\n    fallback: false,\r\n  };\r\n}\r\n\r\nexport async function getStaticProps({ params }) {\r\n  const [year, month, day, ...rest] = params.slug.split(\"-\");\r\n  const createdAt = new Date(`${year} ${month} ${day}`).getTime();\r\n  const title = rest.join(\" \");\r\n\r\n  const content = await fsPromises.readFile(`data/${params.slug}.md`, \"utf8\");\r\n\r\n  return {\r\n    props: {\r\n      post: {\r\n        slug: params.slug,\r\n        title,\r\n        content,\r\n        createdAt,\r\n      },\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}